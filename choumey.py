import random
from currency_converter import CurrencyConverter
import telebot
from telebot import types
from telebot.types import WebAppInfo 
import webbrowser 
from datetime import datetime
from datetime import date
import pytz



bot = telebot.TeleBot("6321476517:AAFxDFhb-itchAUzBbN4lnX40kKPExsbRPE")
API = "f00af4e16194b66ebe88b943973ed633"

currency = CurrencyConverter()


name = None
string1 = "—ç–º —á–æ —Å–ø–µ–∑–¥–∞–Ω—É–ª"
string2 = "–Ω—É —Ç–∏ –ø–∞–ø—É—Ç–∞–ª —á–æ–ª–∏ –±–æ—à"
string3 = "—ç–º –≤–∞—Ä–∏—à–∫—É –ø—Ä–∏–∫—Ä–æ–π"
string4 = "—á–æ–∑–∞ –≤—ã—Å–µ—Ä—ã –ø–æ—à–ª–∏üòí"
string = [string1, string2]
ant1 = "–Ω—É –ø–∞–π–¥–µ—Ç"
ant2 = "–∫—Ä—É—Ç–∞ –æ—á –∫—Ä—É—Ç–∞ —ã—ãüòÅ"
ant3 = "—Ö–∏—Ä–æ–≤–∞üòí"
ant = [ant1, ant2, ant3]
stri1 = None 
stri2 = "–º—è –Ω–∞–¥–µ—é—Å—åüòò"
stri = [stri1, stri2]
amount = 0

@bot.message_handler(commands = ["website"])
def website(message: types.Message):
    markup = types.ReplyKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("open a web", web_app=WebAppInfo(url="https://choumey.github.io")))
    markup.add(types.InlineKeyboardButton("back"))
    bot.send_message(message.chat.id, "here we go", reply_markup=markup)
    
@bot.message_handler(commands = ["help"])
def main(message):
    bot.send_message(message.chat.id, "<em>–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</em><b><u> –≤–µ–ª–∏–∫–æ–≥–æ —á–æ—É–º–µ—è</u></b>", parse_mode = "html")


@bot.message_handler(commands = ["start"])
def start(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}")

@bot.message_handler(commands = ["convert"])
def start(message):
    bot.send_message(message.chat.id, f"{message.from_user.first_name}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É")
    bot.register_next_step_handler(message, summa)
def summa(message):
    global amount
    try:
        amount = int(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n–≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")
        bot.register_next_step_handler(message, summa)
        return

    if amount > 0:
        markup = types.InlineKeyboardMarkup(row_width = 2)
        btn1 = types.InlineKeyboardButton("USD/EUR", callback_data = "usd/eur") 
        btn2 = types.InlineKeyboardButton("EUR/USD", callback_data = "eur/usd") 
        btn3 = types.InlineKeyboardButton("EUR/GBP", callback_data = "eur/gbp") 
        btn4 = types.InlineKeyboardButton("–¥—Ä—É–≥–æ–π –∫—É—Ä—Å", callback_data = "else")   
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç:", reply_markup = markup)
    else: 
        bot.send_message(message.chat.id, "–Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n–≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ –Ω—É–ª—è:")
        bot.register_next_step_handler(message, summa)

@bot.callback_query_handler(func = lambda call: True)
def callback_convert(call):
    if call.data != "else":
        values = call.data.upper().split("/")
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(call.message.chat.id, f"–ü–æ–ª—É—á–∞–µ—Ç—Å—è: {round(res, 2)}")
    else:
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ —Å–ª–µ—à")
        bot.register_next_step_handler(call.message, my_currency)
def my_currency(message):
    try:
        values = message.text.upper().split("/")
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(message.chat.id, f"–ü–æ–ª—É—á–∞–µ—Ç—Å—è: {round(res, 2)}")
    except Exception:
        bot.send_message(message.chat.id, "—á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫..\n–≤–ø–∏—à–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ:")
        bot.register_next_step_handler(message, my_currency)
@bot.message_handler(commands=['reply'])
def selfmyself(message):
    service = telebot.types.ReplyKeyboardMarkup(True, True)
    service.row('—á–æ–º–∏ —Å–∞–π—Ç')
    service.row('—á–æ–º–∏ –∞–Ω–µ–∫–¥–æ—Ç')
    service.row('—á–æ–º–∏ –¥–∞—Ç–∞')
    service.row('—á–æ–º–∏ –≤—Ä–µ–º—è')
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?', reply_markup=service)

# @bot.message_handler(content_types=["photo"])
# def get_photo(message):
#     markup = types.InlineKeyboardMarkup()   
#     markup.add(types.InlineKeyboardButton("—É–¥–∞–ª–∏—Ç—å –Ω–∞—Ö—É", callback_data = "delete"))
#     markup.add(types.InlineKeyboardButton("–≥–æ —Ä–µ–¥–∞—á–∏—Ç—å", callback_data = "edit"))
#     bot.reply_to(message, "—É—Ñ —è –∑–∞—Ü–µ–Ω–∏–ª", reply_markup = markup)
    
    

# @bot.callback_query_handler(func = lambda callback: True)
# def callback_message(callback):
#     if callback.data == "delete":
#         pass
#         if callback.from_user.id == 1177268972:
#             bot.delete_message(callback.message.chat.id, callback.message.message_id)
#         else:
#             bot.send_message(callback.message.chat.id, "–Ω–∏ —Ç–µ–ø–µ —É–¥–∞–ª—è—Ç—å –¥–∞–∑–≤–æ–ª–µ–Ω–æ")
#     elif callback.data == "edit":
#         pass
#         if callback.from_user.id == 1177268972:
#             bot.edit_message_text("—Å–ª–æ–≤–µ—Å–Ω–∏ –ø–∞–Ω–æ—Å", callback.message.chat.id, callback.message.message_id)
#         else:
#             bot.send_message(callback.message.chat.id, "–Ω–∏ —Ç–µ–ø–µ —Ä–µ–¥–∞—á–∏—Ç—å –¥–∞–∑–≤–æ–ª–µ–Ω–æ")
    

# @bot.message_handler(content_types=["audio"])
# def get_audio(message):
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton("—É–¥–∞–ª–∏—Ç—å ", callback_data = "delete"))
#     markup.add(types.InlineKeyboardButton("–≥–æ —Ä–µ–¥–∞—á–∏—Ç—å", callback_data = "edit"))
#     bot.reply_to(message, "–º—É–∑–∏–∫ –∫–∞–π—Ñ–∏ –±—Ä–∞–¥", reply_markup = markup)

# @bot.callback_query_handler(func = lambda callback: True)
# def callback_message(callback):
#     if callback.data == "delete":
#         pass
#         if callback.from_user.id == 1177268972:
#             bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
#         else:
#             bot.send_message(callback.message.chat.id, "–Ω–∏ —Ç–µ–ø–µ —É–¥–∞–ª—è—Ç—å –¥–∞–∑–≤–æ–ª–µ–Ω–æ")
#     elif callback.data == "edit":
#         pass
#         if callback.from_user.id == 1177268972:
#             bot.edit_message_text("—Å–ª–æ–≤–µ—Å–Ω–∏ –ø–∞–Ω–æ—Å", callback.markup.message.chat.id, callback.message.message_id)
#         else:
#             bot.send_message(callback.message.chat.id,  "–Ω–∏ —Ç–µ–ø–µ —Ä–µ–¥–∞—á–∏—Ç—å –¥–∞–∑–≤–æ–ª–µ–Ω–æ")
@bot.message_handler()
def info(message):
    if message.text.lower() == "—á–æ–º–∏":
        bot.send_message(message.chat.id, "—Ö—É–µ–º–∏ –±–µ–±–µ–±–µ")
    elif message.text.lower() == "—Å–∫—É—á–Ω–æ":
        bot.reply_to(message, "–ø–æ–π–¥–∏ —É–±–µ–π—Å—è")
    elif message.text.lower() == "—á–æ–º–∏ –∫–∞–∫ –¥–µ–ª–∞":
        bot.send_message(message.chat.id, random.choice(ant))
    elif message.text.lower() == "–∞–π–¥–∏":
        bot.reply_to(message, f"Id: {message.from_user.id}")
    elif message.text.lower() == "—Å–∞–º":
        bot.send_message(message.chat.id, "—Å–∞–º")
    elif message.text.lower() == "—á—É—Ä–∫–∞":
        bot.reply_to(message, "–¥–∏–Ω–∞")
    elif message.text.lower() == "—á–æ–º–∏ –∫ –Ω–æ–≥–µ":
        pass
        if message.from_user.id == 1177268972:
            bot.reply_to(message, "–¥–∞ –≥–∞—Å–ø–∞–¥–∏–Ω")
        else:
            bot.send_message(message.chat.id, "—á–æ–∑–∞ –ª–æ—Ö —Ä–∏—à–∏–ª –∫–∞–º–∞–Ω–¥—ã–≤–∞—Ç—åü§®")
    elif message.text.lower() == "—Å–ø–æ–∫–∏ –Ω–æ—á–∏":
        bot.send_message(message.chat.id, "—Å–ø–æ–∫–µ –Ω–æ—á–∏ —á–∞—Ç—É :)")
    elif message.text.lower() == "—á–æ–º–∏ —á–æ –¥–µ–ª–∞–µ—à—å":
        d1 = "–Ω–∏—á–æ, –∞ —Ç–∏"
        d2 = "–∂–¥—É –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –µ–±—É—á–µ–≥–æ —Ä–∞–∑—Ä–∞–±–∞\n–∑–∞—î–±–∞–ª –Ω–∏—á–æ –Ω–µ –¥–µ–ª–∞—Ç—å —É—à–µ"
        d = [d1, d2]
        bot.send_message(message.chat.id, random.choice(d))
    elif message.text.lower() == "—á–æ–º–∏ —á—Ç–æ –¥–µ–ª–∞–µ—à—å":
        d1 = "–Ω–∏—á–æ, –∞ —Ç–∏"
        d2 = "–∂–¥—É –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –µ–±—É—á–µ–≥–æ —Ä–∞–∑—Ä–∞–±–∞\n–∑–∞—î–±–∞–ª –Ω–∏—á–æ –Ω–µ –¥–µ–ª–∞—Ç—å —É—à–µ"
        d = [d1, d2]
        bot.send_message(message.chat.id, random.choice(d))
    elif message.text.lower() == "—Ä–∞–Ω–¥–æ–º 0 100":
        bot.reply_to(message, random.randrange(0,100))
    elif message.text.lower() == "—Ä–∞–Ω–¥–æ–º 100 200":
        bot.reply_to(message, random.randrange(100,200))
    elif message.text.lower() == "—Ä–∞–Ω–¥–æ–º 200 300":
        bot.reply_to(message, random.randrange(200,300))
    elif message.text.lower() == "—Ä–∞–Ω–¥–æ–º":
        bot.reply_to(message, random.randrange(0,100000000))
    #elif message.text.lower() == "–Ω–æ–º–µ—Ä1":
        #bot.reply_to(message, f"0953848872, {message.from_user.first_name}, –≤–æ—Ç –Ω–æ–º–µ—Ä1 –Ω–∞—Å—Ç–∏")
    #elif message.text.lower() == "–Ω–æ–º–µ—Ä2":
        #bot.reply_to(message, f"0936219707, {message.from_user.first_name}, –≤–æ—Ç –Ω–æ–º–µ—Ä2 –Ω–∞—Å—Ç–∏")
    elif message.text.lower() == "—Ç–∏—Ö–∞":
        bot.reply_to(message, "–≥—Ä–æ–º–∫–∞")
    elif message.text.lower() == "–¥–∏–Ω–∞—Ö—É":
        bot.reply_to(message, "—Ü—ã—Ü")
    elif message.text.lower() == "—á–æ":
        bot.reply_to(message, "–∞–Ω–∏—á–æ")

    elif message.text.lower() == "–∫—Ç–æ —è":
            pass
            if message.from_user.id == 1177268972:
                bot.reply_to(message, f"—Ç—ã –≤—Ä–æ–¥–µ {message.from_user.first_name}\n—Ç–≤–æ–µ –∞–π–¥–∏ –∏ —É–≥–∞–¥—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ —ç—Ç {message.from_user.id}\n–Ω—É –∏ –∫—Ä—á —Ç—ã –∫–ª—É—Ç–æ–∏ –¥—è–¥—è –Ω—É –∞ –≤–∞—â–µ —è —â—É—á—É –≤ —Ä–æ—Ç–µ–∫ —Ç—è –º–∞–Ω–∞–ª")
            else:
               bot.reply_to(message, f"—Ç—ã –≤—Ä–æ–¥–µ {message.from_user.first_name}\n—Ç–≤–æ–µ –∞–π–¥–∏ –∏ —É–≥–∞–¥—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ —ç—Ç {message.from_user.id}\n–Ω—É –∏ –∫—Ä—á —Ç—ã –æ–±—ã—á–Ω—ã–π —Å–º–µ—Ä—Ç–Ω—ã–π –ø–æ—Ö–æ–¥—É")
    elif message.text.lower() == "—á–æ–º–∏ —Ö—É–µ—Å–æ—Å":
         bot.reply_to(message, random.choice(string))
    elif message.text.lower() == "—á–æ–º–∏ –∑–∞–µ–±–∞–ª":
        bot.reply_to(message, "–∞")
    elif message.text.lower() == "—Ö—É–π –Ω–∞":
        bot.reply_to(message, "–ª–æ–≤–ª—é")
    elif message.text.lower() == "—è –µ–±–∞–ª":
        bot.reply_to(message, random.choice(stri))
    elif message.text.lower() == "—á–æ–º–∏ –Ω–∞–∫–∏–Ω—å –º—É–∑–∏–∫–∏":
        bot.reply_to(message, "—Å–æ—Ä–∏ —É –º—è –ø–æ–∫–∞ –Ω–µ—Ç –º–ø3 —Ñ–æ—Ä–º–∞—Ç–∞ü§•")
    elif message.text == "—á–æ–º–∏ —Å–∞–π—Ç":
        a = telebot.types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, str("https://tanki.su/"), reply_markup=a)
    elif message.text == "—á–æ–º–∏ –∞–Ω–µ–∫–¥–æ—Ç":
        a = telebot.types.ReplyKeyboardRemove()
        j1 = '—Å–∏–¥–µ–ª —á–æ–º–∏–∫ –Ω–∞ –ª–∞–≤–æ—á–∫–µ...\n–∏ –≤–¥—Ä—É–≥ –æ–Ω –∑–∞–º–µ—á–∞–µ—Ç –±–∞—à–µ–Ω–∫–∏ –ø–æ—Ö–æ–∂–∏–µ –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞\n–Ω–µ –∑–∞–¥—É–º—ã–≤–∞—è—Å—å –∫—Ä–∏—á–∏—Ç\n-–∞–ª–∞—Ö–∞–∫–±–∞—Ä'
        j2 = '–±–æ–±–∏–∫ —Å–¥–æ—Ö'
        j3 = '–∫–æ–ª–æ–±–æ–∫ –ø–æ–≤–µ—Å–∏–ª—Å—è'
        j = [j1, j2, j3]
        bot.send_message(message.chat.id, random.choice(j), reply_markup=a)
    elif message.text == "—á–æ–º–∏ –¥–∞—Ç–∞":
        a = telebot.types.ReplyKeyboardRemove()
        current_date = date.today()
        bot.send_message(message.chat.id, f"{message.from_user.first_name}, –¥–∞—Ç–∞: ", reply_markup=a)
        bot.send_message(message.chat.id, current_date, reply_markup=a) 
        
    elif message.text == "—á–æ–º–∏ –≤—Ä–µ–º—è":
        a = telebot.types.ReplyKeyboardRemove()
        tz1 = pytz.timezone("Europe/Vienna")
        tz2 = pytz.timezone("Europe/Kishinev") 
        germ_current_time = datetime.now(tz1).time()
        ua_current_time = datetime.now(tz2).time()
        if message.from_user.id == 1177268972:
            bot.send_message(message.chat.id, f"{message.from_user.first_name}, –≤—Ä–µ–º—è: ", reply_markup=a)
            bot.send_message(message.chat.id, germ_current_time ,reply_markup=a)
        elif not message.from_user.id == 1177268972:
            bot.send_message(message.chat.id, f"{message.from_user.first_name}, –≤—Ä–µ–º—è: ", reply_markup=a)
            bot.send_message(message.chat.id, ua_current_time ,reply_markup=a)
            
    elif message.text == "back":
        telebot.types.ReplyKeyboardRemove()


    
        
bot.polling(none_stop = True)
